//
//  Untitled.swift
//  MorseSignalConverter
//
//  Created by 八久響 on 2024/12/01.
//

import Foundation

// 日本語(ひらがな)モールス信号辞書
let morseCodeDict: [String: String] = [
    // ひらがな
    "あ": ".-", "い": "..", "う": "...", "え": "....", "お": "-----",
    "か": "-.-.", "き": "-.-.", "く": "-..", "け": ".", "こ": "--.-",
    "さ": "-.-.", "し": "-.-.", "す": "-", "せ": "--", "そ": ".--",
    "た": "-.", "ち": "-.-", "つ": "-..", "て": ".", "と": "--",
    "な": "-.", "に": "..", "ぬ": "...", "ね": "--.", "の": "-.-",
    "は": "....", "ひ": "-..", "ふ": ".", "へ": "..-", "ほ": "-..-",
    "ま": "--.", "み": "..-", "む": "-..", "め": "--", "も": "-.-.",
    "や": ".---", "ゆ": "--..", "よ": "---",
    "ら": "-.", "り": "--.", "る": ".", "れ": "..", "ろ": "-.",
    "わ": ".....", "を": "--.-",
    "ん": "-.-", // んは特別なモールス信号
    
    // 拗音（小文字）対応
    "きゃ": "-.-. .-", "きゅ": "-.-. ..", "きょ": "-.-. ---",
    "しゃ": ".... .-", "しゅ": ".... ..", "しょ": ".... ---",
    "ちゃ": "-.- -.-", "ちゅ": "-.- ..", "ちょ": "-.- ---",
    "にゃ": "-. .-", "にゅ": "-. ..", "にょ": "-. ---",
    "ひゃ": ".... .-", "ひゅ": ".... ..", "ひょ": ".... ---",
    "みゃ": "--. .-", "みゅ": "--. ..", "みょ": "--. ---",
    "りゃ": ".-.-", "りゅ": ".-..", "りょ": ".---",
    "ぎゃ": "--. .-", "ぎゅ": "--. ..", "ぎょ": "--. ---",
    "じゃ": "..- .-", "じゅ": "..- ..", "じょ": "..- ---",
    "ぢゃ": "..- .-", "ぢゅ": "..- ..", "ぢょ": "..- ---",
    "びゃ": "... .-", "びゅ": "... ..", "びょ": "... ---",
    "ぴゃ": "-.. .-", "ぴゅ": "-.. ..", "ぴょ": "-.. ---",
]


/// ひらがなをモールス信号に変換する
/// - Parameter input: モールス信号に変換するひらがな
/// - Returns: モールス信号に変換された文字列
func convertHiraganaToMorseCode(_ input: String) -> String {
    var morseCode = ""
    var i = input.startIndex
    
    while i < input.endIndex {
        let char = String(input[i])
        
        // 現在の文字と次の文字を組み合わせて拗音をチェック
        if i < input.index(before: input.endIndex) {
            let nextChar = String(input[input.index(after: i)])
            let twoChar = char + nextChar
            // 2文字の拗音があればモールス信号に変換
            if let code = morseCodeDict[twoChar] {
                morseCode += code + " "  // スペースを追加
                i = input.index(after: i)  // 2文字分進める
            } else if let code = morseCodeDict[char] {
                morseCode += code + " "  // スペースを追加
            }
        } else {
            if let code = morseCodeDict[char] {
                morseCode += code + " "  // スペースを追加
            }
        }
        i = input.index(after: i)  // 次の文字に進む
    }
    
    return morseCode.trimmingCharacters(in: .whitespaces)  // 最後の余分なスペースを削除
}
